setwd('/Users/jeffreywang/Desktop/AML/HW7')
library(gdata)
data <- read.csv('blogData_train.csv')
library(glmnet)
library("rlist")
xmat = as.matrix(data[,-281])
ymat = as.matrix(data[,281])
# Poisson generalized model with lasso
model <- cv.glmnet(xmat, ymat, family='poisson',nfolds=10, alpha=1)
# A scatter plot of true values vs predicted values for testing data
test_data_files = list.files(path="BlogFeedback")
reg_list = list()
par(mfrow=c(3,4))
for (i in 37:48) {
#if (as.integer(i%%6) == 1) {
#  png(filename=paste("test", i%/%6, ".png", sep=""))
#  par(mfrow=c(2,3))
#}
test_data <- read.csv(paste("BlogFeedback/", test_data_files[i], sep=""))
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main=paste("Testing data", i), sub="Predicted v.s. True", xlab="Predicted value", ylab="True value")
reg_test <- lm(y_test~predicted_test)
reg_list = list.append(reg_list, reg_test)
abline(reg_test, col='red')
#if (as.integer(i%/%6) == 0) {
#  dev.off()
#}
}
for (i in 25:36) {
#if (as.integer(i%%6) == 1) {
#  png(filename=paste("test", i%/%6, ".png", sep=""))
#  par(mfrow=c(2,3))
#}
test_data <- read.csv(paste("BlogFeedback/", test_data_files[i], sep=""))
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main=paste("Testing data", i), sub="Predicted v.s. True", xlab="Predicted value", ylab="True value")
reg_test <- lm(y_test~predicted_test)
reg_list = list.append(reg_list, reg_test)
abline(reg_test, col='red')
#if (as.integer(i%/%6) == 0) {
#  dev.off()
#}
}
par(mfrow=c(3,4))
for (i in 25:36) {
#if (as.integer(i%%6) == 1) {
#  png(filename=paste("test", i%/%6, ".png", sep=""))
#  par(mfrow=c(2,3))
#}
test_data <- read.csv(paste("BlogFeedback/", test_data_files[i], sep=""))
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main=paste("Testing data", i), sub="Predicted v.s. True", xlab="Predicted value", ylab="True value")
reg_test <- lm(y_test~predicted_test)
reg_list = list.append(reg_list, reg_test)
abline(reg_test, col='red')
#if (as.integer(i%/%6) == 0) {
#  dev.off()
#}
}
for (i in 37:48) {
#if (as.integer(i%%6) == 1) {
#  png(filename=paste("test", i%/%6, ".png", sep=""))
#  par(mfrow=c(2,3))
#}
test_data <- read.csv(paste("BlogFeedback/", test_data_files[i], sep=""))
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main=paste("Testing data", i), sub="Predicted v.s. True", xlab="Predicted value", ylab="True value")
reg_test <- lm(y_test~predicted_test)
reg_list = list.append(reg_list, reg_test)
abline(reg_test, col='red')
#if (as.integer(i%/%6) == 0) {
#  dev.off()
#}
}
# A scatter plot of true values vs predicted values for testing data
test_data_files = list.files(path="BlogFeedback")
reg_list = list()
par(mfrow=c(3,4))
for (i in 49:60) {
#if (as.integer(i%%6) == 1) {
#  png(filename=paste("test", i%/%6, ".png", sep=""))
#  par(mfrow=c(2,3))
#}
test_data <- read.csv(paste("BlogFeedback/", test_data_files[i], sep=""))
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main=paste("Testing data", i), sub="Predicted v.s. True", xlab="Predicted value", ylab="True value")
reg_test <- lm(y_test~predicted_test)
reg_list = list.append(reg_list, reg_test)
abline(reg_test, col='red')
#if (as.integer(i%/%6) == 0) {
#  dev.off()
#}
}
model$lambda.1se
test_data <- read.csv(paste("BlogFeedback/", test_data_files[1], sep=""))
for (i in 2:60) {
test_data = rbind(test_data, read.csv(paste("BlogFeedback/", test_data_files[i], sep="")))
}
test_data <- read.csv(paste("BlogFeedback/", test_data_files[1], sep=""))
dim(test_data)
View(test_data)
test_data_2 = read.csv(paste("BlogFeedback/", test_data_files[2], sep=""))
View(test_data_2)
dim(test_data_2)
install.packages(data.table)
library(data.table)
test_data <- read.csv(paste("BlogFeedback/", test_data_files[1], sep=""))
for (i in 2:60) {
test_data = rbindlist(list(test_data, read.csv(paste("BlogFeedback/", test_data_files[i], sep=""))))
}
dim(test_data)
# Split test data to x_test and y_test
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main=paste("Testing data", i), sub="Predicted v.s. True", xlab="Predicted value", ylab="True value")
# Split test data to x_test and y_test
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main="Testing data\nPredicted v.s. True", xlab="Predicted value", ylab="True value")
# Split test data to x_test and y_test
par(mfrow=c(1,1))
x_test = as.matrix(test_data[,-281])
y_test = as.matrix(test_data[,281])
predicted_test = predict(model, x_test, s="lambda.min")
plot(predicted_test, y_test, main="Testing data\nPredicted v.s. True", xlab="Predicted value", ylab="True value")
reg_test <- lm(y_test~predicted_test)
reg_list = list.append(reg_list, reg_test)
abline(reg_test, col='red')
summary(reg_test)
predicted_test = predict(model, x_test, s="lambda.1se")
plot(predicted_test, y_test, main="Testing data\nPredicted v.s. True", xlab="Predicted value", ylab="True value")
reg_test <- lm(y_test~predicted_test)
abline(reg_test, col='red')
